services:
  nginx:
    container_name: curriculum-nginx
    image: nginx:latest
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./app:/var/www/html
    ports:
      - "80:80"
    depends_on:
      - php
    networks:
      - backend

  php:
    container_name: curriculum-laravel
    build:
      context: ./
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./app:/var/www/html
      - ./docker/php/check_startup.sh:/tmp/check_startup.sh
      - ./wait-for-it.sh:/wait-for-it.sh
      - ./app:/var/www/html
    expose:
      - "9000"
    depends_on:
      - db
    command: |
      bash -c "
      # .envファイルが存在しない場合の処理
      if [ ! -f /var/www/html/.env ]; then
        echo '.env file not found. Creating from .env.example...' && \
        cp /var/www/html/.env.example /var/www/html/.env && \
        sed -i 's/DB_HOST=.*/DB_HOST=db/' /var/www/html/.env && \
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' /var/www/html/.env \
      else
        echo '.env file already exists.';
      fi

      # MySQLの準備を待つ
      until mysql -h db -u root -proot -e 'SELECT 1'; do
        echo 'Waiting for MySQL to be ready...'
        sleep 2
      done

      # Laravelのマイグレーションとビルド
      npm install sass@latest && \
      composer install && \
      composer update && \
      composer dump-autoload && \
      php artisan key:generate && \
      php artisan storage:link && \
      chown -R www-data storage/ && \
      php artisan cache:clear && \
      npm install && \
      npm run build && \
      php artisan migrate --force --no-interaction && \
      php-fpm"
    networks:
      - backend
    tty: true

  db:
    container_name: curriculum-db
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: 'Asia/Tokyo'
    volumes:
      - ./db:/var/lib/mysql
    restart: always
    ports:
      - 3306:3306
    networks:
      - backend

  phpMyAdmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=root
    links:
      - db
    ports:
      - 4040:80
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - backend

networks:
  backend:
    driver: bridge
